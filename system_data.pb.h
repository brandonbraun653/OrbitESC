/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_SYSTEM_DATA_PB_H_INCLUDED
#define PB_SYSTEM_DATA_PB_H_INCLUDED
#include <pb.h>
#include "serial_interface.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(32) SystemDataMessage_data_t;
/* Message type for streaming out raw data from the system in real time */
typedef struct _SystemDataMessage {
    Header header;
    SystemDataId id;
    bool has_data;
    SystemDataMessage_data_t data;
} SystemDataMessage;

/* Message type for SystemDataId::ADC_PHASE_CURRENTS */
typedef struct _SystemDataMessage_ADCPhaseCurrents {
    uint32_t timestamp; /* System time of measurement in microseconds */
    float ia; /* Phase A current in Amps */
    float ib; /* Phase B current in Amps */
    float ic; /* Phase C current in Amps */
} SystemDataMessage_ADCPhaseCurrents;

/* Message type for SystemDataId::PWM_COMMANDS */
typedef struct _SystemDataMessage_ADCPhaseVoltages {
    uint32_t timestamp; /* System time of measurement in microseconds */
    float va; /* Phase A voltage command in Volts */
    float vb; /* Phase B voltage command in Volts */
    float vc; /* Phase C voltage command in Volts */
} SystemDataMessage_ADCPhaseVoltages;

/* Message type for SystemDataId::ADC_SYSTEM_VOLTAGES */
typedef struct _SystemDataMessage_ADCSystemVoltages {
    uint32_t timestamp; /* System time of measurement in microseconds */
    float v_mcu; /* Logic level supply voltage in Volts */
    float v_dc_link; /* DC link voltage in Volts */
    float v_temp; /* Temperature sensor voltage in Volts */
    float v_isense; /* Current sense amplifier voltage reference in Volts */
} SystemDataMessage_ADCSystemVoltages;

/* Message type for SystemDataId::STATE_ESTIMATES */
typedef struct _SystemDataMessage_StateEstimates {
    uint32_t timestamp; /* System time of measurement in microseconds */
    float theta_est; /* Physical angle of the rotor in radians */
    float omega_est; /* Physical angular velocity of the rotor in radians per second */
} SystemDataMessage_StateEstimates;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SystemDataMessage_init_default           {Header_init_default, _SystemDataId_MIN, false, {0, {0}}}
#define SystemDataMessage_ADCPhaseCurrents_init_default {0, 0, 0, 0}
#define SystemDataMessage_ADCPhaseVoltages_init_default {0, 0, 0, 0}
#define SystemDataMessage_ADCSystemVoltages_init_default {0, 0, 0, 0, 0}
#define SystemDataMessage_StateEstimates_init_default {0, 0, 0}
#define SystemDataMessage_init_zero              {Header_init_zero, _SystemDataId_MIN, false, {0, {0}}}
#define SystemDataMessage_ADCPhaseCurrents_init_zero {0, 0, 0, 0}
#define SystemDataMessage_ADCPhaseVoltages_init_zero {0, 0, 0, 0}
#define SystemDataMessage_ADCSystemVoltages_init_zero {0, 0, 0, 0, 0}
#define SystemDataMessage_StateEstimates_init_zero {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SystemDataMessage_header_tag             1
#define SystemDataMessage_id_tag                 2
#define SystemDataMessage_data_tag               3
#define SystemDataMessage_ADCPhaseCurrents_timestamp_tag 1
#define SystemDataMessage_ADCPhaseCurrents_ia_tag 2
#define SystemDataMessage_ADCPhaseCurrents_ib_tag 3
#define SystemDataMessage_ADCPhaseCurrents_ic_tag 4
#define SystemDataMessage_ADCPhaseVoltages_timestamp_tag 1
#define SystemDataMessage_ADCPhaseVoltages_va_tag 2
#define SystemDataMessage_ADCPhaseVoltages_vb_tag 3
#define SystemDataMessage_ADCPhaseVoltages_vc_tag 4
#define SystemDataMessage_ADCSystemVoltages_timestamp_tag 1
#define SystemDataMessage_ADCSystemVoltages_v_mcu_tag 2
#define SystemDataMessage_ADCSystemVoltages_v_dc_link_tag 3
#define SystemDataMessage_ADCSystemVoltages_v_temp_tag 4
#define SystemDataMessage_ADCSystemVoltages_v_isense_tag 5
#define SystemDataMessage_StateEstimates_timestamp_tag 1
#define SystemDataMessage_StateEstimates_theta_est_tag 2
#define SystemDataMessage_StateEstimates_omega_est_tag 3

/* Struct field encoding specification for nanopb */
#define SystemDataMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  header,            1) \
X(a, STATIC,   REQUIRED, UENUM,    id,                2) \
X(a, STATIC,   OPTIONAL, BYTES,    data,              3)
#define SystemDataMessage_CALLBACK NULL
#define SystemDataMessage_DEFAULT NULL
#define SystemDataMessage_header_MSGTYPE Header

#define SystemDataMessage_ADCPhaseCurrents_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   timestamp,         1) \
X(a, STATIC,   REQUIRED, FLOAT,    ia,                2) \
X(a, STATIC,   REQUIRED, FLOAT,    ib,                3) \
X(a, STATIC,   REQUIRED, FLOAT,    ic,                4)
#define SystemDataMessage_ADCPhaseCurrents_CALLBACK NULL
#define SystemDataMessage_ADCPhaseCurrents_DEFAULT NULL

#define SystemDataMessage_ADCPhaseVoltages_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   timestamp,         1) \
X(a, STATIC,   REQUIRED, FLOAT,    va,                2) \
X(a, STATIC,   REQUIRED, FLOAT,    vb,                3) \
X(a, STATIC,   REQUIRED, FLOAT,    vc,                4)
#define SystemDataMessage_ADCPhaseVoltages_CALLBACK NULL
#define SystemDataMessage_ADCPhaseVoltages_DEFAULT NULL

#define SystemDataMessage_ADCSystemVoltages_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   timestamp,         1) \
X(a, STATIC,   REQUIRED, FLOAT,    v_mcu,             2) \
X(a, STATIC,   REQUIRED, FLOAT,    v_dc_link,         3) \
X(a, STATIC,   REQUIRED, FLOAT,    v_temp,            4) \
X(a, STATIC,   REQUIRED, FLOAT,    v_isense,          5)
#define SystemDataMessage_ADCSystemVoltages_CALLBACK NULL
#define SystemDataMessage_ADCSystemVoltages_DEFAULT NULL

#define SystemDataMessage_StateEstimates_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   timestamp,         1) \
X(a, STATIC,   REQUIRED, FLOAT,    theta_est,         2) \
X(a, STATIC,   REQUIRED, FLOAT,    omega_est,         3)
#define SystemDataMessage_StateEstimates_CALLBACK NULL
#define SystemDataMessage_StateEstimates_DEFAULT NULL

extern const pb_msgdesc_t SystemDataMessage_msg;
extern const pb_msgdesc_t SystemDataMessage_ADCPhaseCurrents_msg;
extern const pb_msgdesc_t SystemDataMessage_ADCPhaseVoltages_msg;
extern const pb_msgdesc_t SystemDataMessage_ADCSystemVoltages_msg;
extern const pb_msgdesc_t SystemDataMessage_StateEstimates_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SystemDataMessage_fields &SystemDataMessage_msg
#define SystemDataMessage_ADCPhaseCurrents_fields &SystemDataMessage_ADCPhaseCurrents_msg
#define SystemDataMessage_ADCPhaseVoltages_fields &SystemDataMessage_ADCPhaseVoltages_msg
#define SystemDataMessage_ADCSystemVoltages_fields &SystemDataMessage_ADCSystemVoltages_msg
#define SystemDataMessage_StateEstimates_fields &SystemDataMessage_StateEstimates_msg

/* Maximum encoded size of messages (where known) */
#define SystemDataMessage_ADCPhaseCurrents_size  21
#define SystemDataMessage_ADCPhaseVoltages_size  21
#define SystemDataMessage_ADCSystemVoltages_size 26
#define SystemDataMessage_StateEstimates_size    16
#define SystemDataMessage_size                   48

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
