syntax = "proto2";
import "nanopb.proto";


// Instrumentation message header common to all types. Each functional message type **must**
// have this first in their list of declarations.
message InstHeader {
  required uint32 msgId = 1 [(nanopb).int_size = IS_8]; // Root message identifier
  required uint32 subId = 2 [(nanopb).int_size = IS_8]; // Possible sub-identifier to specify root ID details
  required uint32 size = 3 [(nanopb).int_size = IS_8];  // Total length of the message following the header
}

// Root type that parsers can use to peek at messages
message BaseMessage {
  required InstHeader header = 1;
}

// Generic ACK or NACK to a previous message
message AckNackMessage {
  required InstHeader header = 1;
  required bool acknowledge = 2;
}

message PingMessage {
  required InstHeader header = 1;
}

message ConsoleMessage {
  required InstHeader header = 1;
  required uint32 frame = 2 [(nanopb).int_size = IS_8];
  required bytes data = 3 [(nanopb).max_size = 128];
}

message SystemInfoMessage {
  required InstHeader header = 1;
  required uint32 systemTick = 2;
  required string swVersion = 3 [(nanopb).max_size = 16, (nanopb).fixed_length = true];
  required string description = 4 [(nanopb).max_size = 16, (nanopb).fixed_length = true];
  required string serialNumber = 5 [(nanopb).max_size = 16, (nanopb).fixed_length = true];
}