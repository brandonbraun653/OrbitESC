/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_SRC_CORE_COM_PROTO_MOTOR_CONTROL_PB_H_INCLUDED
#define PB_SRC_CORE_COM_PROTO_MOTOR_CONTROL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MotorCtrlState {
    MotorCtrlState_MOTOR_CTRL_STATE_INVALID = 0, /* Invalid motor control state */
    MotorCtrlState_MOTOR_CTRL_STATE_IDLE = 1, /* Motor control is idle */
    MotorCtrlState_MOTOR_CTRL_STATE_ARMED = 2, /* Motor control is armed */
    MotorCtrlState_MOTOR_CTRL_STATE_ENGAGED = 3, /* Motor control is engaged */
    MotorCtrlState_MOTOR_CTRL_STATE_FAULT = 4 /* Motor control is in a fault state */
} MotorCtrlState;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _MotorCtrlState_MIN MotorCtrlState_MOTOR_CTRL_STATE_INVALID
#define _MotorCtrlState_MAX MotorCtrlState_MOTOR_CTRL_STATE_FAULT
#define _MotorCtrlState_ARRAYSIZE ((MotorCtrlState)(MotorCtrlState_MOTOR_CTRL_STATE_FAULT+1))


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
