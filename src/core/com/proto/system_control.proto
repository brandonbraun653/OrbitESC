syntax = "proto2";
import "nanopb.proto";

enum SystemControlSubId {
  SUB_MSG_SYS_CTRL_RESET   = 1; // Reset the system
  SUB_MSG_SYS_CTRL_MOTOR   = 2; // Inject manual motor control commands
  SUB_MSG_SYS_CTRL_CAL_ADC = 3; // Calibrate the ADC
  SUB_MSG_SYS_CTRL_MANUAL_INNER_LOOP = 4; // Manual inner loop control enable/disable
  SUB_MSG_SYS_CTRL_MANUAL_INNER_LOOP_REF = 5; // New references to use for manual inner loop control
  SUB_MSG_ENABLE_STREAM_PHASE_CURRENTS = 6; // Enable streaming of phase currents
  SUB_MSG_DISABLE_STREAM_PHASE_CURRENTS = 7; // Disable streaming of phase currents
  SUB_MSG_ENABLE_STREAM_SYSTEM_VOLTAGES = 8; // Enable streaming of system voltages
  SUB_MSG_DISABLE_STREAM_SYSTEM_VOLTAGES = 9; // Disable streaming of system voltages
  SUB_MSG_ENABLE_STREAM_PHASE_VOLTAGES = 10; // Enable streaming of phase voltage commands
  SUB_MSG_DISABLE_STREAM_PHASE_VOLTAGES = 11; // Disable streaming of phase voltage commands
  SUB_MSG_ENABLE_STREAM_STATE_ESTIMATES = 12; // Enable streaming of state estimates
  SUB_MSG_DISABLE_STREAM_STATE_ESTIMATES = 13; // Disable streaming of state estimates
  SUB_MSG_SYS_CTRL_ARM = 14; // Arm the motor control system
  SUB_MSG_SYS_CTRL_DISARM = 15; // Disarm the motor control system
  SUB_MSG_SYS_CTRL_ENGAGE = 16; // Engage the motor control system
  SUB_MSG_SYS_CTRL_DISENGAGE = 17; // Disengage the motor control system
  SUB_MSG_SYS_CTRL_FAULT = 18; // Panic the motor control system
  SUB_MSG_SYS_CTRL_EMERGENCY_STOP = 19; // Emergency stop the motor control system
}
