syntax = "proto2";
import "nanopb.proto";
import "serial_interface.proto";

enum ParamType {
  UNKNOWN = 0;
  BOOL    = 1;
  UINT8   = 2;
  UINT16  = 3;
  UINT32  = 4;
  FLOAT   = 5;
  DOUBLE  = 6;
  BYTES   = 7;
  STRING  = 8;
}

enum ParamId {
  // Housekeeping parameters
  PARAM_INVALID       = -1; // Invalid parameter

  // Read Only Parameters
  PARAM_BOOT_COUNT    = 0;  // Number of times the software has booted
  PARAM_HW_VERSION    = 1;  // Hardware version of the PCB
  PARAM_SW_VERSION    = 2;  // Software version of the firmware
  PARAM_DEVICE_ID     = 3;  // Factory programmed unique device ID
  PARAM_BOARD_NAME    = 4;  // Name of the board
  PARAM_DESCRIPTION   = 5;  // Description of the project

  // Read/Write Parameters
  PARAM_SERIAL_NUMBER       = 10; // Serial number of the device
  PARAM_DISK_UPDATE_RATE_MS = 11; // How often to write parameters to disk
  PARAM_ACTIVITY_LED_SCALER = 12; // Scale the activity LED blink rate
  PARAM_BOOT_MODE           = 13; // Boot mode of the device
  PARAM_CAN_NODE_ID         = 14; // CAN node ID of the device

  // Motor Control Parameters
  PARAM_STATOR_PWM_FREQ = 20; // PWM frequency of the motor drive in Hz
  PARAM_SPEED_CTRL_FREQ = 21; // Speed controller core update frequency in Hz
  PARAM_TARGET_IDLE_RPM = 22; // Target RPM when the motor is idle
  PARAM_SPEED_CTRL_KP = 23; // Speed controller proportional gain
  PARAM_SPEED_CTRL_KI = 24; // Speed controller integral gain
  PARAM_SPEED_CTRL_KD = 25; // Speed controller derivative gain
  PARAM_CURRENT_CTRL_Q_AXIS_KP = 26; // Current controller Q-axis proportional gain
  PARAM_CURRENT_CTRL_Q_AXIS_KI = 27; // Current controller Q-axis integral gain
  PARAM_CURRENT_CTRL_Q_AXIS_KD = 28; // Current controller Q-axis derivative gain
  PARAM_CURRENT_CTRL_D_AXIS_KP = 29; // Current controller D-axis proportional gain
  PARAM_CURRENT_CTRL_D_AXIS_KI = 30; // Current controller D-axis integral gain
  PARAM_CURRENT_CTRL_D_AXIS_KD = 31; // Current controller D-axis derivative gain
  // PARAM_CURRENT_CTRL_Q_FIR_COEFFS = 32; // Current controller Q-axis FIR filter coefficients
  // PARAM_CURRENT_CTRL_D_FIR_COEFFS = 33; // Current controller D-axis FIR filter coefficients
  PARAM_RAMP_CTRL_FIRST_ORDER_TERM = 34; // First order term of the ramp controller
  PARAM_RAMP_CTRL_SECOND_ORDER_TERM = 35; // Second order term of the ramp controller
  PARAM_RAMP_CTRL_RAMP_TIME_SEC = 36; // Ramp time of the ramp controller in seconds
  PARAM_CURRENT_OBSERVER_KSLIDE = 37; // Current observer sliding mode controller K gain value
  PARAM_CURRENT_OBSERVER_MAX_ERROR = 38; // Current observer maximum error value

  // Motor Description
  PARAM_ROTOR_POLES = 50; // Number of poles in the motor
  PARAM_STATOR_SLOTS = 51; // Number of slots in the motor
  PARAM_STATOR_RESISTANCE = 52; // Stator resistance in Ohms
  PARAM_STATOR_INDUCTANCE = 53; // Stator inductance in Henrys

  // Monitor Thresholds
  PARAM_PEAK_CURRENT_THRESHOLD = 60; // Peak current threshold in Amps
  PARAM_PEAK_VOLTAGE_THRESHOLD = 61; // Peak voltage threshold in Volts
}

message ParamIOMessage {
  required Header header = 1;
  optional ParamId id = 2 [(nanopb).int_size = IS_16];
  optional ParamType type = 3 [(nanopb).int_size = IS_8];
  optional bytes data = 4 [(nanopb).max_size = 64 ];
}