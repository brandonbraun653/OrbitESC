syntax = "proto2";
import "nanopb.proto";
import "serial_interface.proto";


// Message type for streaming out raw data from the system in real time
message SystemDataMessage {
  required Header header = 1;
  required SystemDataId id = 2 [(nanopb).int_size = IS_8];
  optional bytes data = 3 [(nanopb).max_size = 32 ];

  // Message type for SystemDataId::ADC_PHASE_CURRENTS
  message ADCPhaseCurrents {
    required uint32 timestamp = 1;  // System time of measurement in microseconds
    required float ia = 2;          // Phase A current in Amps
    required float ib = 3;          // Phase B current in Amps
    required float ic = 4;          // Phase C current in Amps
  }

  // Message type for SystemDataId::PWM_COMMANDS
  message ADCPhaseVoltages {
    required uint32 timestamp = 1;  // System time of measurement in microseconds
    required float va = 2;          // Phase A voltage command in Volts
    required float vb = 3;          // Phase B voltage command in Volts
    required float vc = 4;          // Phase C voltage command in Volts
  }

  // Message type for SystemDataId::ADC_SYSTEM_VOLTAGES
  message ADCSystemVoltages {
    required uint32 timestamp = 1;  // System time of measurement in microseconds
    required float v_mcu = 2;       // Logic level supply voltage in Volts
    required float v_dc_link = 3;   // DC link voltage in Volts
    required float v_temp = 4;      // Temperature sensor voltage in Volts
    required float v_isense = 5;    // Current sense amplifier voltage reference in Volts
  }

  // Message type for SystemDataId::STATE_ESTIMATES
  message StateEstimates {
    required uint32 timestamp = 1;  // System time of measurement in microseconds
    required float theta_est = 2;   // Physical angle of the rotor in radians
    required float omega_est = 3;   // Physical angular velocity of the rotor in radians per second
  }
}
